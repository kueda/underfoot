name: Build Pack

on:
  workflow_call:
    inputs:
      pack:
        description: A pack IDs (e.g. 'us-ca-oakland')
        type: string
        required: true
    secrets:
      DO_SPACES_KEY:
        required: true
      DO_SPACES_SECRET:
        required: true
      DO_ACCESS_TOKEN:
        required: true

jobs:
  rocks:
    name: Build rocks
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgis/postgis:12-2.5
        env:
          POSTGRES_USER: underfoot
          POSTGRES_PASSWORD: underfoot
          POSTGRES_DB: underfoot
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3

      # - uses: ./.github/actions/underfoot-setup@gh-actions
      - name: Install dependencies
        run: ./.github/dependencies.sh

      - id: cache-source-work
        name: Cache source work
        uses: actions/cache@v3
        with:
          path: sources/work-*
          key: cache-source-work-${{ inputs.pack }}-${{ hashFiles(format('packs/{0}.json', inputs.pack)) }}

      - name: Build rocks
        run: python packs.py ${{ inputs.pack }} --only-rocks
        env:
          PGHOST: 0.0.0.0
          PGUSER: underfoot
          PGPASSWORD: underfoot

      - name: Upload rocks.mbtiles
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.pack }}-rocks
          path: build/${{ inputs.pack }}/rocks.mbtiles
  # water:
  # contours:
  # ways:
  # context:
  upload-pack:
    runs-on: ubuntu-20.04
    needs:
      - rocks
      # - water
      # - contours
      # - ways
      # - context
    steps:
      - uses: actions/checkout@v3

      # - uses: ./.github/actions/underfoot-setup@gh-actions
      - name: Install dependencies
        run: ./.github/dependencies.sh

      - name: Download all MBTiles artifacts
        uses: actions/download-artifact@v3

      - name: Zip up the pack
        run: |
          mkdir -p build/${{ inputs.pack }}
          mv ${{ inputs.pack }}-rocks/rocks.mbtiles build/${{ inputs.pack }}/
          mv ${{ inputs.pack }}-rocks/water.mbtiles build/${{ inputs.pack }}/
          mv ${{ inputs.pack }}-rocks/contours.mbtiles build/${{ inputs.pack }}/
          mv ${{ inputs.pack }}-rocks/ways.mbtiles build/${{ inputs.pack }}/
          mv ${{ inputs.pack }}-rocks/context.mbtiles build/${{ inputs.pack }}/
          cd build/${{ inputs.pack }}/
          zip ${{ inputs.pack }}.zip *.mbtiles
          mv ${{ inputs.pack }}.zip ../
          cd ../../

      - name: Make the manifest
        run: |
          python packs.py manifest --s3-bucket-url https://static.underfoot.rocks

      - name: Set up s3cmd for Digital Ocean
        uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: digitalocean
          region: sfo2
          access_key: ${{ secrets.DO_SPACES_KEY }}
          secret_key: ${{ secrets.DO_SPACES_SECRET }}

      - name: Upload pack to Digital Ocean
        run: |
          s3cmd put build/manifest.json s3://underfoot2/manifest.json
          s3cmd setacl s3://underfoot2/manifest.json --acl-public
          s3cmd put build/${{ inputs.pack }}.zip s3://underfoot2/${{ inputs.pack }}.zip
          s3cmd setacl s3://underfoot2/${{ inputs.pack }}.zip --acl-public

      - name: Set up doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Flush the CDN cache
        run: doctl compute cdn flush ee6a9baf-c5bd-423d-bbcf-305e3a3f5e40

  # build-pack:
  #   name: Build & upload pack
  #   runs-on: ubuntu-20.04
  #   services:
  #     postgres:
  #       image: postgis/postgis:12-2.5
  #       env:
  #         POSTGRES_USER: underfoot
  #         POSTGRES_PASSWORD: underfoot
  #         POSTGRES_DB: underfoot
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install system dependencies
  #       run: |
  #         sudo add-apt-repository ppa:ubuntugis/ppa
  #         sudo add-apt-repository ppa:deadsnakes/ppa
  #         sudo apt-get update
  #         sudo apt-get install -y \
  #           build-essential \
  #           gdal-bin \
  #           libgdal-dev \
  #           osmosis \
  #           python3-gdal \
  #           python3.8 \
  #           python3.8-dev \
  #           sqlite3 \
  #           unzip

  #     - name: Install Python and other dependencies
  #       run: python setup.py

  #     - name: Cache source work
  #       id: cache-source-work
  #       uses: actions/cache@v3
  #       with:
  #         path: sources/work-*
  #         key: cache-source-work-${{ inputs.pack }}-${{ hashFiles(format('packs/{0}.json', inputs.pack)) }}

  #     - name: Get current year week
  #       id: calc-year-week
  #       run: echo "year-week=$(date +'%Y-%U')" >> $GITHUB_OUTPUT

  #     - name: Get OSM URL
  #       id: get-osm-url
  #       run: UNDERFOOT_PACK=${{ inputs.pack }} && echo "osm-url=$(jq -c -r .osm packs/$UNDERFOOT_PACK.json)" >> $GITHUB_OUTPUT

  #     - name: Cache OSM download
  #       id: cache-osm
  #       uses: actions/cache@v3
  #       with:
  #         path: "*.osm.pbf"
  #         key: cache-osm-${{ steps.get-osm-url.outputs.osm-url }}-${{ steps.calc-year-week.outputs.year-week }}

  #     - name: Cache elevation tiles
  #       id: cache-elevation
  #       uses: actions/cache@v3
  #       with:
  #         path: elevation-tiles
  #         key: cache-elevation-${{ inputs.pack }}-${{ hashFiles(format('packs/{0}.json', inputs.pack)) }}

  #     - name: Build pack
  #       run: python packs.py ${{ inputs.pack }} --s3-bucket-url https://static.underfoot.rocks
  #       env:
  #         PGHOST: 0.0.0.0
  #         PGUSER: underfoot
  #         PGPASSWORD: underfoot

  #     - name: Set up s3cmd for Digital Ocean
  #       uses: s3-actions/s3cmd@v1.2.0
  #       with:
  #         provider: digitalocean
  #         region: sfo2
  #         access_key: ${{ secrets.DO_SPACES_KEY }}
  #         secret_key: ${{ secrets.DO_SPACES_SECRET }}

  #     - name: Upload pack to Digital Ocean
  #       run: |
  #         s3cmd put build/manifest.json s3://underfoot2/manifest.json
  #         s3cmd setacl s3://underfoot2/manifest.json --acl-public
  #         s3cmd put build/${{ inputs.pack }}.zip s3://underfoot2/${{ inputs.pack }}.zip
  #         s3cmd setacl s3://underfoot2/${{ inputs.pack }}.zip --acl-public

  #     - name: Set up doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DO_ACCESS_TOKEN }}

  #     - name: Flush the CDN cache
  #       run: doctl compute cdn flush ee6a9baf-c5bd-423d-bbcf-305e3a3f5e40

