name: Build Underfoot packs

on: workflow_dispatch

jobs:
  # https://code.dblock.org/2021/09/03/generating-task-matrix-by-looping-over-repo-files-with-github-actions.html
  list-packs:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls packs/us-ca-*.json | xargs -I'{}' basename {} .json | jq -R -s -c 'split("\n")[:-1]')"

  build:
    needs: list-packs
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgis/postgis:12-2.5
        env:
          POSTGRES_USER: underfoot
          POSTGRES_PASSWORD: underfoot
          POSTGRES_DB: underfoot
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        pack: ${{ fromJson(needs.list-packs.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gdal-bin \
            libgdal-dev \
            osmosis \
            python3-gdal \
            python3.8 \
            python3.8-dev \
            sqlite3 \
            unzip

      - name: Set up Python dependencies
        run: python setup.py

      - name: Cache source work
        id: cache-source-work
        uses: actions/cache@v3
        with:
          path: sources/work-*
          key: cache-source-work-${{ matrix.pack }}-${{ hashFiles(format('packs/{0}.json', matrix.pack)) }}

      - name: Build pack
        run: python packs.py ${{ matrix.pack }} --s3-bucket-url https://static.underfoot.rocks
        env:
          PGHOST: 0.0.0.0
          PGUSER: underfoot
          PGPASSWORD: underfoot

      - name: Set up s3cmd for Digital Ocean
        uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: digitalocean
          region: sfo2
          access_key: ${{ secrets.DO_SPACES_KEY }}
          secret_key: ${{ secrets.DO_SPACES_SECRET }}

      - name: Post pack to Digital Ocean
        run: |
          s3cmd put build/manifest.json s3://underfoot2/manifest.json
          s3cmd setacl s3://underfoot2/manifest.json --acl-public
          s3cmd put build/${{ matrix.pack }}.zip s3://underfoot2/${{ matrix.pack }}.zip
          s3cmd setacl s3://underfoot2/${{ matrix.pack }}.zip --acl-public

      - name: Set up doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Flush the CDN cache
        run: doctl compute cdn flush ee6a9baf-c5bd-423d-bbcf-305e3a3f5e40
